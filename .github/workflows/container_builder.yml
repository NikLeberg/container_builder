name: container_builder

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      username:
        required: true
        type: string
      images:
        required: true
        type: string
      push:
        required: true
        type: boolean
    secrets:
      password:
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        image: ${{fromJson(inputs.images)}}
    defaults:
      run:
        shell: bash
        working-directory: ./${{matrix.image}}
    env:
      base_tag: ${{inputs.registry}}/${{inputs.username}}/${{matrix.image}}
    steps:

      - name: Maximize Build Space
        working-directory: .
        run: |
          echo "Available storage (pre cleanup):"
          df -h
          echo
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/share/swift
          echo "Available storage (after cleanup):"
          df -h

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Registry
        run: |
          echo ${{secrets.password}} | docker login ${{inputs.registry}} -u ${{inputs.username}} --password-stdin

      - name: Run pre_build Script
        id: pre_build
        run: |
          if [ -e ./pre_build.sh ]
          then
            ./pre_build.sh
          fi

      - name: Build and Push as Staging
        uses: docker/build-push-action@v5
        with:
          context: ./${{matrix.image}}
          push: true
          tags: ${{env.base_tag}}:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max   

      - name: Scan Container with Trivy
        if: steps.pre_build.outputs.trivy_skip != 'skip'
        uses: aquasecurity/trivy-action@master
        with:
          scanners: vuln
          image-ref: ${{env.base_tag}}:staging
          ignore-unfixed: true
          format: sarif
          output: trivy-results.sarif
          timeout: 20m0s

      - name: Scan Container with Dockle
        if: steps.pre_build.outputs.dockle_skip != 'skip'
        uses: erzz/dockle-action@v1.3.2
        with:
          image: ${{env.base_tag}}:staging
          failure-threshold: FATAL
          exit-code: 1
          timeout: 20m

      - name: Upload Scan Results
        if: steps.pre_build.outputs.trivy_skip != 'skip'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: .

      - name: Run post_build Script
        run: |
          if [ -e ./post_build.sh ]
          then
            ./post_build.sh
          fi

      - name: Push Container as Latest
        if: inputs.push
        uses: docker/build-push-action@v5
        with:
          context: ./${{matrix.image}}
          push: true
          tags: ${{env.base_tag}}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Logout from Registry
        if: always()
        run: docker logout ${{inputs.registry}}
