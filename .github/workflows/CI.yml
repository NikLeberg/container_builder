name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  # Names of container images to build that have no repository internal
  # dependencies.
  stage_1:
    qt6-pyside6
    qt6
  # Names of images that depend on others in stage 1.
  stage_2:
    zephyr-fuzz
    quartus-prime-aji
  # Names of images that depend on others in stage 2.
  stage_3:
    neorv32_soc

jobs:

  detect_changes:
    name: Detect Changes
    runs-on: ubuntu-22.04
    outputs:
      stage_1: ${{steps.changed-containers.outputs.stage_1}}
      stage_2: ${{steps.changed-containers.outputs.stage_2}}
      stage_3: ${{steps.changed-containers.outputs.stage_3}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changed Containers
        id: changed-containers
        run: .github/workflows/detect_changes.sh "${{env.stage_1}}" "${{env.stage_2}}" "${{env.stage_3}}"
        shell: bash

  stage_1:
    name: Build Stage 1 Images
    needs: detect_changes
    if: always() && needs.detect_changes.outputs.stage_1 != ''
    uses: ./.github/workflows/container_builder.yml
    with:
      registry: ghcr.io
      username: nikleberg
      images: ${{needs.detect_changes.outputs.stage_1}}
      push: ${{github.ref_name == 'main'}}
    secrets:
      password: ${{secrets.GITHUB_TOKEN}}

  stage_2:
    name: Build Stage 2 Images
    needs: [detect_changes, stage_1]
    if: always() && needs.detect_changes.outputs.stage_2 != ''
    uses: ./.github/workflows/container_builder.yml
    with:
      registry: ghcr.io
      username: nikleberg
      images: ${{needs.detect_changes.outputs.stage_2}}
      push: ${{github.ref_name == 'main'}}
    secrets:
      password: ${{secrets.GITHUB_TOKEN}}

  stage_3:
    name: Build Stage 3 Images
    needs: [detect_changes, stage_2]
    if: always() && needs.detect_changes.outputs.stage_3 != ''
    uses: ./.github/workflows/container_builder.yml
    with:
      registry: ghcr.io
      username: nikleberg
      images: ${{needs.detect_changes.outputs.stage_3}}
      push: ${{github.ref_name == 'main'}}
    secrets:
      password: ${{secrets.GITHUB_TOKEN}}

  summarize:
    # Allows to enforce branch protection rules by requiring that this job
    # and expecially all its 'needs' succeeded.
    # See: https://github.com/actions/runner/issues/491
    name: Summarize
    runs-on: ubuntu-22.04
    needs: [stage_1, stage_2, stage_3]
    if: always()
    steps:
      - name: Successful builds?
        run: |
          if ${{ contains(needs.*.result, 'failure') }}; then
            echo "One or more matrix builds have failed!"
            false
          fi
          if ${{ contains(needs.*.result, 'cancelled') }}; then
            echo "One or more matrix builds were cancelled!"
            false
          fi
        shell: bash
